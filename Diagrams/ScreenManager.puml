@startuml
skinparam linetype polyline
skinparam linetype ortho

skinparam nodesep 100
skinparam ranksep 100

skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor red
skinparam titleBackgroundColor Aqua-CadetBlue
skinparam TitleFontSize 40

title Appendix N - ScreenManager Class Composition Relations

class com.mygdx.game.engine.screen.ScreenManager {
- ArrayList<String> storyboardImgPath
- ArrayList<String> planetVisitImgPath
- ArrayList<StoryboardScreen> storyboards
- ArrayList<StoryboardScreen> visitPlanetStoryboards
- MainMenuScreen mainMenuScreen
- PauseScreen pauseScreen
- GameOverScreen gameOverScreen
- ScoreboardScreen scoreboardScreen
- ControlScreen controlScreen
- GameScreen gameScreen
- Main game
+ ArrayList<String> getStoryboardImgPath()
+ void setStoryboardImgPath(ArrayList<String>)
+ ArrayList<String> getPlanetVisitImgPath()
+ void setPlanetVisitImgPath(ArrayList<String>)
+ ArrayList<StoryboardScreen> getStoryboards()
+ void setStoryboards(ArrayList<StoryboardScreen>)
+ ArrayList<StoryboardScreen> getVisitPlanetStoryboards()
+ void setVisitPlanetStoryboards(ArrayList<StoryboardScreen>)
+ void setMainMenuScreen(MainMenuScreen)
+ void setPauseScreen(PauseScreen)
+ void setGameOverScreen(GameOverScreen)
+ void setScoreboardScreen(ScoreboardScreen)
+ void setControlScreen(ControlScreen)
+ void setGameScreen(GameScreen)
+ void instantiateScreens()
+ MainMenuScreen getMainMenuScreen()
+ PauseScreen getPauseScreen()
+ GameOverScreen getGameOverScreen()
+ ScoreboardScreen getScoreboardScreen()
+ ControlScreen getControlScreen()
+ GameScreen getGameScreen()
+ void createScreenButtons(int,ArrayList<Button>,float,ArrayList<String>)
+ ArrayList<StoryboardScreen> generateStoryboards(ArrayList<String>,String)
}

class com.mygdx.game.game.screens.game.StoryboardScreen {
- String imgPath
- Texture texture
- SpriteBatch batch
- Main game
- CustomInputProcessor inputProcessor
- OrthographicCamera camera
- Button nextButton
- float buttonShowDelay
- Timer.Task buttonShowTask
- int current
- String type
+ int getCurrent()
+ void setCurrent(int)
+ void show()
+ void render(float)
+ void resize(int,int)
+ void pause()
+ void resume()
+ void hide()
+ void dispose()
+ void next()
}

class com.mygdx.game.game.screens.menu.MainMenuScreen {
- CustomInputProcessor inputProcessor
- Main game
- OrthographicCamera camera
- ArrayList<Button> buttons
- SpriteBatch batch
- Texture texture
- ArrayList<String> buttonImagePath
- boolean soundPlayed
- ScoreboardScreen scoreboardScreen
+ void setInputProcessor(CustomInputProcessor)
+ void setButtons(ArrayList<Button>)
+ void show()
+ void render(float)
+ void resize(int,int)
+ void play()
+ void quit()
+ void pause()
+ void resume()
+ void hide()
+ void dispose()
}

class com.mygdx.game.game.screens.menu.PauseScreen {
- SpriteBatch batch
- Texture texture
- CustomInputProcessor inputProcessor
- Main game
- ArrayList<Button> buttons
- ArrayList<String> buttonPath
+ CustomInputProcessor getInputProcessor()
+ void setInputProcessor(CustomInputProcessor)
+ ArrayList<Button> getButtons()
+ void setButtons(ArrayList<Button>)
+ void show()
+ void render(float)
+ void resize(int,int)
+ void pause()
+ void resume()
+ void hide()
+ void dispose()
+ void quit()
}

class com.mygdx.game.game.screens.game.GameOverScreen {
- SpriteBatch batch
- Texture texture
- CustomInputProcessor inputProcessor
- Main game
- ArrayList<Button> buttons
- ArrayList<String> buttonPath
+ CustomInputProcessor getInputProcessor()
+ void setInputProcessor(CustomInputProcessor)
+ ArrayList<Button> getButtons()
+ void setButtons(ArrayList<Button>)
+ void show()
+ void render(float)
+ void resize(int,int)
+ void pause()
+ void resume()
+ void hide()
+ void dispose()
+ void quit()
}

class com.mygdx.game.game.screens.menu.ScoreboardScreen {
- CustomInputProcessor inputProcessor
- Button backButton
- SpriteBatch batch
- Texture texture
- Main game
- Table table
- ArrayList<PlayerScore> playerScores
+ CustomInputProcessor getInputProcessor()
+ void setInputProcessor(CustomInputProcessor)
+ void show()
+ void render(float)
+ void resize(int,int)
+ void pause()
+ void resume()
+ void hide()
+ void dispose()
}

class com.mygdx.game.game.screens.game.ControlScreen {
- String imgPath
- Texture texture
- SpriteBatch batch
- Main game
- CustomInputProcessor inputProcessor
- OrthographicCamera camera
- Button playButton
- float buttonShowDelay
- Timer.Task buttonShowTask
+ void show()
+ void render(float)
+ void resize(int,int)
+ void pause()
+ void resume()
+ void hide()
+ void dispose()
+ void play()
}

class com.mygdx.game.game.screens.game.GameScreen {
- Main game
- Button pauseButton
- OrthographicCamera camera
- CustomInputProcessor inputProcessor
- Viewport viewport
- GamePlay gamePlay
- float buttonShowDelay
- Timer.Task buttonShowTask
- SpriteBatch batch
+ SpriteBatch getBatch()
+ void setBatch(SpriteBatch)
+ Button getPauseButton()
+ void setPauseButton(Button)
+ CustomInputProcessor getInputProcessor()
+ void setInputProcessor(CustomInputProcessor)
+ void show()
+ void render(float)
+ void resize(int,int)
+ void pause()
+ void resume()
+ void hide()
+ void quit()
+ void dispose()
}

class com.mygdx.game.engine.lifecycle.Main {
- {static} Main instance
- ScreenManager screenManager
- Preferences prefs
- SoundManager soundManager
+ EntityManager entityManager
- SpriteBatch batch
- BitmapFont font
+ int HEIGHT
+ int WIDTH
+ {static} Main getInstance()
+ ScreenManager getScreenManager()
+ void setScreenManager(ScreenManager)
+ SoundManager getSoundManager()
+ void setSoundManager(SoundManager)
+ SpriteBatch getBatch()
+ void setBatch(SpriteBatch)
+ BitmapFont getFont()
+ void setFont(BitmapFont)
+ Preferences getPrefs()
+ void setPrefs(Preferences)
+ void create()
+ void render()
+ void dispose()
}

com.mygdx.game.engine.screen.ScreenManager *------ com.mygdx.game.game.screens.game.StoryboardScreen :has many
com.mygdx.game.engine.screen.ScreenManager *------ com.mygdx.game.game.screens.menu.MainMenuScreen :has
com.mygdx.game.engine.screen.ScreenManager *------ com.mygdx.game.game.screens.menu.PauseScreen :has
com.mygdx.game.engine.screen.ScreenManager *------ com.mygdx.game.game.screens.game.GameOverScreen :has
com.mygdx.game.engine.screen.ScreenManager *------ com.mygdx.game.game.screens.menu.ScoreboardScreen :has
com.mygdx.game.engine.screen.ScreenManager *------ com.mygdx.game.game.screens.game.ControlScreen :has
com.mygdx.game.engine.screen.ScreenManager *------ com.mygdx.game.game.screens.game.GameScreen :has
com.mygdx.game.engine.screen.ScreenManager *------ com.mygdx.game.engine.lifecycle.Main :has
@enduml