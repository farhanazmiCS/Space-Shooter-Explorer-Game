@startuml
interface com.mygdx.game.entity.CollisionManager {
~ void limitPlayerMovement(E,E)
~ boolean checkFallingObjectCollision(P,F)
}
class com.mygdx.game.entity.EntityManager {
- CollidableEntity<Player> player
- ArrayList<CollidableEntity<FallingObject>> fallingObjects
- ArrayList<Texture> fallingObjectImages
+ void limitPlayerMovement(Integer,Integer)
+ void movePlayer(CustomInputProcessor)
+ long spawnFallingObject(int,int)
+ Integer moveFallingObject()
+ boolean checkFallingObjectCollision(CollidableEntity<Player>,CollidableEntity<FallingObject>)
+ ArrayList<CollidableEntity<FallingObject>> getFallingObjects()
+ void setFallingObjects(ArrayList<CollidableEntity<FallingObject>>)
+ CollidableEntity<Player> getPlayer()
+ void setPlayer(int)
+ ArrayList<Texture> getFallingObjectImages()
+ void setFallingObjectImages(ArrayList<Texture>)
+ void resetFailingObjects()
}
interface com.mygdx.game.entity.BehaviourManager {
~ E moveFallingObject()
}


com.mygdx.game.entity.CollisionManager <|.. com.mygdx.game.entity.EntityManager : "implements"
com.mygdx.game.entity.BehaviourManager <|.. com.mygdx.game.entity.EntityManager : "implements"
@enduml