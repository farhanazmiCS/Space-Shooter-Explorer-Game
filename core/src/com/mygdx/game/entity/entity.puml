@startuml
class com.mygdx.game.entity.NonCollidableEntity {
}
class com.mygdx.game.entity.Player {
- String imgName
- Sprite sprite
- float width
- float height
- float speed
- int[] mainKeyboardInputs
- int[] altKeyboardInputs
- int score
+ String getImgName()
+ void setImgName(String)
+ Sprite getSprite()
+ void setSprite(Sprite)
+ float getWidth()
+ void setWidth(float)
+ float getHeight()
+ void setHeight(float)
+ float getSpeed()
+ void setSpeed(float)
+ int[] getMainKeyboardInputs()
+ void setMainKeyboardInputs(int[])
+ int[] getAltKeyboardInputs()
+ void setAltKeyboardInputs(int[])
+ int getScore()
+ void setScore(int)
}
abstract class com.mygdx.game.entity.Entity {
- float x
- float y
- T object
+ float getX()
+ void setX(float)
+ float getY()
+ void setY(float)
+ T getObject()
+ void setObject(T)
# Object clone()
+ boolean equals(Object)
+ int hashCode()
}
class com.mygdx.game.entity.FallingObject {
- int type
- Texture image
- float width
- float height
+ int getType()
+ void setType(int)
+ Texture getImage()
+ void setImage(Texture)
+ float getWidth()
+ void setWidth(float)
+ float getHeight()
+ void setHeight(float)
}
class com.mygdx.game.entity.CollidableEntity {
- float prevX
- float prevY
+ float getPrevX()
+ void setPrevX(float)
+ float getPrevY()
+ void setPrevY(float)
}
class com.mygdx.game.entity.EntityManager {
- CollidableEntity<Player> player
- ArrayList<CollidableEntity<FallingObject>> fallingObjects
- ArrayList<Texture> fallingObjectImages
+ void limitPlayerMovement(Integer,Integer)
+ void movePlayer(CustomInputProcessor)
+ long spawnFallingObject(int,int)
+ int moveFallingObject()
+ boolean checkFallingObjectCollision(CollidableEntity<Player>,CollidableEntity<FallingObject>)
+ ArrayList<CollidableEntity<FallingObject>> getFallingObjects()
+ void setFallingObjects(ArrayList<CollidableEntity<FallingObject>>)
+ CollidableEntity<Player> getPlayer()
+ void setPlayer(CollidableEntity<Player>)
+ ArrayList<Texture> getFallingObjectImages()
+ void setFallingObjectImages(ArrayList<Texture>)
}
interface com.mygdx.game.entity.CollisionManager {
~ void limitPlayerMovement(E,E)
~ boolean checkFallingObjectCollision(P,F)
}


com.mygdx.game.entity.Entity <|-- com.mygdx.game.entity.NonCollidableEntity : "extends"
com.mygdx.game.entity.Cloneable <|.. com.mygdx.game.entity.Entity : "implements"
com.mygdx.game.entity.Entity <|-- com.mygdx.game.entity.CollidableEntity : "extends"
com.mygdx.game.entity.CollisionManager <|.. com.mygdx.game.entity.EntityManager : "implements"
com.mygdx.game.entity.Player o--- com.mygdx.game.entity.CollidableEntity : "has generic typing"
com.mygdx.game.entity.FallingObject o--- com.mygdx.game.entity.CollidableEntity : "has generic typing"
com.mygdx.game.entity.CollidableEntity o--- com.mygdx.game.entity.EntityManager : "has many"
@enduml